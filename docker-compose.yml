version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    env_file: .env
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NUEVO SERVICIO: MailHog para capturar correos localmente
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # Puerto SMTP para que los servicios envíen correos
      - "8025:8025" # Puerto para la interfaz web donde verás los correos

  auth-service:
    build: ./backend-services/auth-service
    container_name: auth-service
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      # El servicio de auth ahora depende de que mailhog esté disponible
      mailhog:
        condition: service_started
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      # CORRECCIÓN: Apuntamos al servicio mailhog como nuestro servidor de correo
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_SECURE=false
      # MailHog no necesita usuario ni contraseña
      - EMAIL_USER=
      - EMAIL_PASS=
    expose:
      - "${AUTH_SERVICE_PORT}"

  cuaderno-service:
    build: ./backend-services/cuaderno-service
    container_name: cuaderno-service
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
    expose:
      - "${CUADERNO_SERVICE_PORT}"

  app-web:
    build: ./frontend-clients/app-web
    container_name: react-web-app
    restart: unless-stopped
    ports:
      - "3000:80"

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    depends_on:
      - cuaderno-service
      - auth-service

volumes:
  db-data:
