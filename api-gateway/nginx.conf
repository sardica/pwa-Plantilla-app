server {
    listen 8000;

    #==================================================================
    # Resolvedor de DNS interno de Docker. Esto ayuda a Nginx a encontrar
    # otros contenedores en la misma red (ej. 'auth-service') y puede
    # prevenir errores 502 Bad Gateway.
    #==================================================================
    resolver 127.0.0.11;

    #==================================================================
    # Enrutamiento al Servicio de Autenticación
    #==================================================================
    # Esta expresión regular captura /api/auth y /api/auth/loquesea
    location ~ ^/api/auth(?:/(.*))?$ {
        
        # Pasa las cabeceras importantes del cliente al microservicio
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;

        # Manejo de la petición de sondeo (preflight) de CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Añade las cabeceras CORS a las respuestas reales (no preflight)
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Pasa la petición al servicio, añadiendo la parte de la URL capturada ($1)
        # y los argumentos de la query string si existen.
        proxy_pass http://auth-service:8001/$1$is_args$args;
    }

    #==================================================================
    # Enrutamiento al Servicio de Cuadernos
    #==================================================================
    # Esta expresión regular captura /api/cuadernos y /api/cuadernos/loquesea
    location ~ ^/api/cuadernos(?:/(.*))?$ {

        # Pasa las cabeceras importantes del cliente al microservicio
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
        
        # Manejo de la petición de sondeo (preflight) de CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Añade las cabeceras CORS a las respuestas reales (no preflight)
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Pasa la petición al servicio, añadiendo la parte de la URL capturada ($1)
        # y los argumentos de la query string si existen.
        proxy_pass http://cuaderno-service:8002/$1$is_args$args;
    }
}